
-- DROP TABLE IF EXISTS public.roles;
CREATE TABLE IF NOT EXISTS public.roles
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    name character varying(255) NOT NULL,
    CONSTRAINT roles_pkey PRIMARY KEY (id),
    CONSTRAINT roles_name_key UNIQUE (name)
    );

-- DROP TABLE IF EXISTS public.users;
CREATE TABLE IF NOT EXISTS public.users
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    username character varying(255) NOT NULL,
--     email character varying(255),
--     mobile character varying(255),
--     name character varying(255),
--     email_verified boolean,
--     mobile_verified boolean,
    enabled boolean NOT NULL,
    password character varying(255),
    last_login_at TIMESTAMP,
    last_login_ip VARCHAR(20),
    created_at timestamp(6) without time zone,
    updated_at timestamp(6) without time zone,
    CONSTRAINT users_pkey PRIMARY KEY (id)
    );


CREATE TABLE IF NOT EXISTS public.person (
                                             id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    username character varying(100) UNIQUE NOT NULL,
    mobile_number character varying(20) UNIQUE NOT NULL,
    email VARCHAR(150) UNIQUE NOT NULL,
    -- Personal Info
    first_name VARCHAR(100),
    last_name VARCHAR(100),
    date_of_birth DATE,
    gender VARCHAR(20),
    national_id VARCHAR(30),
    photo_url TEXT,
    blood_grop VARCHAR(20),

    email_verified boolean,
    mobile_verified boolean
    );

CREATE TABLE IF NOT EXISTS public.person_details (
                                                     id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    person_id bigint NOT NULL UNIQUE REFERENCES public.users(id) ON DELETE CASCADE,

    --familly Info
    father_name VARCHAR(100),
    father_mobile_number VARCHAR(20),
    mother_name VARCHAR(100),
    mother_mobile_number VARCHAR(20),
    emergency_contact_person VARCHAR(100),
    emergency_contact_person_relation VARCHAR(100),
    emergency_contact_number VARCHAR(20),

    -- Education Info
    education_level VARCHAR(100),       -- e.g., "Bachelorâ€™s in CSE"
    institution_name VARCHAR(150),
    passing_year INTEGER,

    -- Address Info (normalized using administrative level)
    current_location_id UUID,
    current_location_type VARCHAR(100),
    current_address VARCHAR(250),

    permanent_location_id UUID,
    permanent_location_type VARCHAR(100),
    permanent_address VARCHAR(250),

    -- Audit Info
    created_at TIMESTAMP DEFAULT NOW(),
    created_by bigint,
    updated_at TIMESTAMP DEFAULT NOW(),
    updated_by bigint
    );
